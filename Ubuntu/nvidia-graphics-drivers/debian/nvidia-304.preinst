#! /bin/sh
# preinst script for nvidia-304
#
# see: dh_installdeb(1)
#
# Copyright (C) 2009 Canonical Ltd
# Authors: Alberto Milone

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
#
# For details see /usr/share/doc/packaging-manual/

#if [ `dpkg --print-architecture` = "amd64" ]; then
#    HAS_LIB32="yes"
#fi
package_name=nvidia-304
this_version=`dpkg-query -W -f='${Version}' $package_name | cut -d\: -f2`
arch=`dpkg --print-architecture`

_remove_diversions() {
    set -a "libGL.so.1" "libGL.so"

    while [ $# -ge 1 ]; do
        libname=$1
        if dpkg-divert --list | grep -F "/usr/lib/x86_64-linux-gnu/$libname.distrib"
        then
            rm -f /usr/lib/x86_64-linux-gnu/$libname
            dpkg-divert --remove --rename /usr/lib/x86_64-linux-gnu/$libname
        fi
        if [ "$arch" = "amd64" ]; then
            if dpkg-divert --list | grep -F "/usr/lib/i386-linux-gnu/$libname.distrib"
            then
                rm -f /usr/lib/i386-linux-gnu/$libname
                dpkg-divert --remove --rename /usr/lib/i386-linux-gnu/$libname
            fi
        fi
        shift
    done
}

_remove_alternative () {
    NAME=$1
    if [ -n "`update-alternatives --list $NAME 2>/dev/null`" ]; then
        set -a `update-alternatives --list $NAME 2>/dev/null`
        while [ $# -ge 1 ] && [ "$#" != "configure" ]; do
            ALTERNATIVE=${1}
            update-alternatives --remove $NAME $ALTERNATIVE
            shift
        done
     fi
}

_remove_alternatives () {
    # Clean up any previous non-multi-arch alternatives
    _remove_alternative gl_conf

    # Clean up the most recent alternatives
    _remove_alternative x86_64-linux-gnu_gl_conf
    _remove_alternative x86_64-linux-gnu_egl_conf

    # Clean up the compatibility alternatives
    if [ "$arch" = "amd64" ]; then
        _remove_alternative i386-linux-gnu_gl_conf
        _remove_alternative i386-linux-gnu_egl_conf
     fi

    # Remove the alternative for glamor-egl
    _remove_alternative glamor_conf

    # explicit ldconfig due to alternatives
    ldconfig
}

_clean_up () {
    # Make sure that no diversion is still there
    _remove_diversions

    # Remove any nvidia related alternatives
    _remove_alternatives
}

case "$1" in
    install|upgrade)

	old_version="$2"
    if dpkg --compare-versions "$old_version" lt "$no_alternatives_version"; then
        # Clean up debris from previous nvidia packages
        _clean_up
	else
	    # Only remove any nvidia related alternatives
        _remove_alternatives
    fi

    # Attempt to remove a .run file installation of the driver before installing the package
    if [ -x /usr/bin/nvidia-uninstall ]; then
        /usr/bin/nvidia-uninstall -s || :
    fi;

	# Add diversions on the (E)GL libraries
	set -a "libGL.so.1" "libGL.so"

	while [ $# -ge 1 ]; do
		libname=$1
		if ! dpkg-divert --list | grep -F "/usr/lib/x86_64-linux-gnu/$libname.distrib"; then
			dpkg-divert --add --rename /usr/lib/x86_64-linux-gnu/$libname
		fi
        if [ "$arch" = amd64 ]; then
            if ! dpkg-divert --list | grep -F "/usr/lib/i386-linux-gnu/$libname.distrib"; then
                dpkg-divert --add --rename /usr/lib/i386-linux-gnu/$libname
            fi
        fi


		shift
	done

    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac



# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
